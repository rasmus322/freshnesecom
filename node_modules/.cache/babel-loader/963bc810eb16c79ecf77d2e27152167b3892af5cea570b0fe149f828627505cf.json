{"ast":null,"code":"/*\nCopyright (c) NAVER Crop.\nname: @cfcs/core\nlicense: MIT\nauthor: NAVER Crop.\nrepository: https://github.com/naver/cfcs\nversion: 0.0.4\n*/\nimport Component from '@egjs/component';\n\n/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nfunction keys(obj) {\n  return Object.keys(obj);\n}\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\nfunction isObject(val) {\n  return typeof val === \"object\";\n}\nfunction isFunction(val) {\n  return typeof val === \"function\";\n}\nfunction withClassMethods(methods) {\n  return function (prototype, memberName) {\n    methods.forEach(function (name) {\n      if (name in prototype) {\n        return;\n      }\n      prototype[name] = function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var result = (_a = this[memberName])[name].apply(_a, args); // fix `this` type to return your own `class` instance to the instance using the decorator.\n\n        if (result === this[memberName]) {\n          return this;\n        } else {\n          return result;\n        }\n      };\n    });\n  };\n}\nvar OBSERVERS_PATH = \"__observers__\";\nvar Observer = /*#__PURE__*/\nfunction () {\n  function Observer(value) {\n    this._emitter = new Component();\n    this._current = value;\n  }\n  var __proto = Observer.prototype;\n  Object.defineProperty(__proto, \"current\", {\n    get: function () {\n      return this._current;\n    },\n    set: function (value) {\n      var isUpdate = value !== this._current;\n      this._current = value;\n      if (isUpdate) {\n        this._emitter.trigger(\"update\", value);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  __proto.subscribe = function (callback) {\n    this._emitter.on(\"update\", callback);\n  };\n  __proto.unsubscribe = function (callback) {\n    this._emitter.off(\"update\", callback);\n  };\n  return Observer;\n}();\nfunction withReactiveMethods(ref, methods) {\n  var obj = {};\n  if (!methods) {\n    return obj;\n  }\n  methods.forEach(function (name) {\n    obj[name] = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      var current = ref.current || ref.value;\n      return current[name].apply(current, args);\n    };\n  });\n  return obj;\n}\nfunction observe(defaultValue) {\n  return new Observer(defaultValue);\n}\nfunction getObservers(instance) {\n  if (!instance[OBSERVERS_PATH]) {\n    instance[OBSERVERS_PATH] = {};\n  }\n  return instance[OBSERVERS_PATH];\n}\nfunction getObserver(instance, name, defaultValue) {\n  var observers = getObservers(instance);\n  if (!observers[name]) {\n    observers[name] = observe(defaultValue);\n  }\n  return observers[name];\n}\nfunction setObserver(instance, name, observer) {\n  var observers = getObservers(instance);\n  observers[name] = observer;\n}\nfunction isObserver(val) {\n  return val && \"current\" in val && \"subscribe\" in val && \"unsubscribe\" in val;\n}\nfunction Reactive(name) {\n  return function (prototype, memberName) {\n    var publicName = name || memberName;\n    Object.defineProperty(prototype, memberName, {\n      get: function () {\n        return getObserver(this, publicName).current;\n      },\n      set: function (value) {\n        getObserver(this, publicName, value).current = value;\n      }\n    });\n    if (publicName !== memberName) {\n      Object.defineProperty(prototype, publicName, {\n        get: function () {\n          return getObserver(this, publicName).current;\n        }\n      });\n    }\n  };\n}\nfunction injectReactiveSubscribe(object) {\n  object[\"subscribe\"] = function (name, callback) {\n    getObserver(this, name).subscribe(callback);\n  };\n  object[\"unsubscribe\"] = function (name, callback) {\n    var _this = this;\n    if (!name) {\n      keys(getObservers(this)).forEach(function (observerName) {\n        _this.unsubscribe(observerName);\n      });\n      return;\n    }\n    if (!(name in this)) {\n      return;\n    }\n    getObserver(this, name).unsubscribe(callback);\n  };\n}\nfunction ReactiveSubscribe(Constructor) {\n  var prototype = Constructor.prototype;\n  injectReactiveSubscribe(prototype);\n}\nfunction reactive(setup) {\n  var result = isFunction(setup) ? setup() : setup;\n  var reactiveObject = {};\n  keys(result).forEach(function (name) {\n    var value = result[name];\n    if (isObserver(value)) {\n      setObserver(reactiveObject, name, value);\n      Reactive(name)(reactiveObject, name);\n    } else {\n      reactiveObject[name] = value;\n    }\n  });\n  injectReactiveSubscribe(reactiveObject);\n  return reactiveObject;\n}\nfunction adaptReactive(adapter) {\n  var _a;\n  function data() {\n    var _a, _b;\n    return (_b = (_a = adapter.data) === null || _a === void 0 ? void 0 : _a.call(adapter)) !== null && _b !== void 0 ? _b : {};\n  }\n  var instanceRef = {\n    current: ((_a = adapter.created) === null || _a === void 0 ? void 0 : _a.call(adapter, data())) || null\n  };\n  var firstState = null;\n  return {\n    state: function () {\n      var inst = instanceRef.current;\n      if (firstState) {\n        return firstState;\n      }\n      if (adapter.state) {\n        firstState = adapter.state;\n      } else if (inst) {\n        var observers_1 = getObservers(inst);\n        firstState = keys(observers_1).reduce(function (prev, cur) {\n          prev[cur] = observers_1[cur].current;\n          return prev;\n        }, {});\n      }\n      return firstState || {};\n    },\n    instance: function () {\n      return instanceRef.current;\n    },\n    mounted: function () {\n      var _a;\n      instanceRef.current = ((_a = adapter.mounted) === null || _a === void 0 ? void 0 : _a.call(adapter, data())) || instanceRef.current;\n    },\n    init: function () {\n      var _a;\n      (_a = adapter.init) === null || _a === void 0 ? void 0 : _a.call(adapter, instanceRef.current, data());\n    },\n    destroy: function () {\n      var _a;\n      (_a = adapter.destroy) === null || _a === void 0 ? void 0 : _a.call(adapter, instanceRef.current, data());\n    },\n    methods: function () {\n      return withReactiveMethods(instanceRef, adapter.methods);\n    },\n    on: function (eventName, listener) {\n      var _a;\n      (_a = adapter.on) === null || _a === void 0 ? void 0 : _a.call(adapter, instanceRef.current, eventName, listener);\n    },\n    off: function (eventName, listener) {\n      var _a;\n      (_a = adapter.off) === null || _a === void 0 ? void 0 : _a.call(adapter, instanceRef.current, eventName, listener);\n    }\n  };\n}\nexport { Observer, Reactive, ReactiveSubscribe, adaptReactive, camelize, getObserver, getObservers, injectReactiveSubscribe, isFunction, isObject, isObserver, keys, observe, reactive, setObserver, withClassMethods, withReactiveMethods };","map":{"version":3,"names":["keys","obj","Object","camelize","str","replace","all","letter","toUpperCase","isObject","val","isFunction","withClassMethods","methods","prototype","memberName","forEach","name","args","_i","arguments","length","result","_a","apply","OBSERVERS_PATH","Observer","value","_emitter","Component","_current","__proto","defineProperty","get","set","isUpdate","trigger","subscribe","callback","on","unsubscribe","off","withReactiveMethods","ref","current","observe","defaultValue","getObservers","instance","getObserver","observers","setObserver","observer","isObserver","Reactive","publicName","injectReactiveSubscribe","object","_this","observerName","ReactiveSubscribe","Constructor","reactive","setup","reactiveObject","adaptReactive","adapter","data","_b","call","instanceRef","created","firstState","state","inst","observers_1","reduce","prev","cur","mounted","init","destroy","eventName","listener"],"sources":["../src/core/utils.ts","../src/dom/utils.ts","../src/reactive/const.ts","../src/reactive/Observer.ts","../src/reactive/utils.ts","../src/reactive/Reactive.ts","../src/reactive/ReactiveSubscribe.ts","../src/reactive/inlineReactive.ts","../src/reactive/adaptReactive.ts"],"sourcesContent":["/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport function keys<T extends Record<string, any>>(obj: T): Array<keyof T> {\n  return Object.keys(obj);\n}\n\nexport function camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\n\nexport function isObject(val: any): val is object {\n  return typeof val === \"object\";\n}\nexport function isFunction(val: any): val is Function {\n  return typeof val === \"function\";\n}","\nexport function withClassMethods(methods: readonly string[]) {\n  return function (prototype: any, memberName: string) {\n    methods.forEach((name: string) => {\n      if (name in prototype) {\n        return;\n      }\n      prototype[name] = function (...args) {\n        const result = this[memberName][name](...args);\n\n        // fix `this` type to return your own `class` instance to the instance using the decorator.\n        if (result === this[memberName]) {\n          return this;\n        } else {\n          return result;\n        }\n      };\n    });\n  };\n}\n","export const OBSERVERS_PATH = \"__observers__\";\nexport const REACTIVE_PATH = \"__reactive__\";\n","import Component from \"@egjs/component\";\n\ninterface EmitterEvents<Value> {\n  update: (value: Value) => void;\n}\n\nexport class Observer<Value = any> {\n  private _current: Value;\n  private _emitter = new Component<EmitterEvents<Value>>();\n\n  constructor(value?: Value) {\n    this._current = value as any;\n  }\n  public get current() {\n    return this._current as Value;\n  }\n  public set current(value: Value) {\n    const isUpdate = value !== this._current;\n    this._current = value;\n\n    if (isUpdate) {\n      this._emitter.trigger(\"update\", value);\n    }\n  }\n  public subscribe(callback: (value: Value) => void) {\n    this._emitter.on(\"update\", callback);\n  }\n  public unsubscribe(callback?: (value: Value) => void) {\n    this._emitter.off(\"update\", callback);\n  }\n}\n","import { OBSERVERS_PATH } from \"./const\";\nimport { Observer } from \"./Observer\";\nimport { ReactiveMethods } from \"./types\";\nimport { Ref } from \"../core\";\n\n\nexport function withReactiveMethods<\n  Instance,\n  Names extends keyof Partial<Instance>,\n  Return extends ReactiveMethods<Instance, Names>\n>(ref: Ref<Instance>, methods?: readonly Names[]): Return {\n  const obj: Record<any, any> = {};\n\n  if (!methods) {\n    return obj;\n  }\n\n  methods.forEach(name => {\n    obj[name] = function (...args: any[]) {\n      const current: any = ref.current || ref.value;\n\n      return current[name](...args);\n    };\n  });\n  return obj as Return;\n}\n\n\nexport function observe<Type>(defaultValue?: Type): Observer<Type> {\n  return new Observer<Type>(defaultValue);\n}\n\nexport function getObservers(instance: any): Record<string, Observer<any>> {\n  if (!instance[OBSERVERS_PATH]) {\n    instance[OBSERVERS_PATH] = {};\n  }\n  return instance[OBSERVERS_PATH];\n}\n\nexport function getObserver(instance: any, name: string, defaultValue?: any): Observer<any> {\n  const observers = getObservers(instance);\n\n  if (!observers[name]) {\n    observers[name] = observe(defaultValue);\n  }\n  return observers[name];\n}\n\nexport function setObserver(instance: any, name: string, observer: Observer<any>) {\n  const observers = getObservers(instance);\n\n  observers[name] = observer;\n}\n\nexport function isObserver(val: any): val is Observer {\n  return val && (\"current\" in val && \"subscribe\" in val && \"unsubscribe\" in val);\n}","import { getObserver } from \"./utils\";\n\nexport function Reactive(name?: string) {\n    return function (prototype: any, memberName: string) {\n        const publicName = name || memberName;\n\n        Object.defineProperty(prototype, memberName, {\n            get: function () {\n                return getObserver(this, publicName).current;\n            },\n            set: function (value: any) {\n                getObserver(this, publicName, value).current = value;\n            },\n        });\n        if (publicName !== memberName) {\n            Object.defineProperty(prototype, publicName, {\n                get: function () {\n                    return getObserver(this, publicName).current;\n                },\n            });\n        }\n    };\n}\n\n","import { keys } from \"../core\";\nimport { getObserver, getObservers } from \"./utils\";\n\nexport function injectReactiveSubscribe(object: Record<string, any>, ) {\n    object[\"subscribe\"] = function (name: string, callback: (value: any) => void) {\n        getObserver(this, name).subscribe(callback);\n    };\n    object[\"unsubscribe\"] = function (name?: string, callback?: (value: any) => void) {\n        if (!name) {\n            keys(getObservers(this)).forEach((observerName) => {\n                this.unsubscribe(observerName);\n            });\n            return;\n        }\n        if (!(name in this)) {\n            return;\n        }\n        getObserver(this, name).unsubscribe(callback);\n    };\n}\n\nexport function ReactiveSubscribe(Constructor: any) {\n    const prototype = Constructor.prototype;\n\n    injectReactiveSubscribe(prototype);\n}\n\nexport interface ReactiveSubscribe<Properties extends Record<string, any>> {\n    subscribe<Name extends keyof Properties = keyof Properties>(\n        name: Name, callback: (value: Properties[Name]) => void): void;\n    unsubscribe<Name extends keyof Properties = keyof Properties>(\n        name?: Name, callback?: (value: Properties[Name]) => void): void;\n}","import { ExtractNever, isFunction, keys } from \"../core\";\nimport { Observer } from \"./Observer\";\nimport { Reactive } from \"./Reactive\";\nimport { injectReactiveSubscribe, ReactiveSubscribe } from \"./ReactiveSubscribe\";\nimport { isObserver, setObserver } from \"./utils\";\n\n\ntype ConvertValue<Object extends Record<string, any>> = {\n    [Key in keyof Object]: Object[Key] extends Observer<infer Type> ? Type : Object[Key];\n}\n\ntype PickObverser<Object extends Record<string, any>> = ExtractNever<{\n    [Key in keyof Object]: Object[Key] extends Observer<infer Type> ? Type : never;\n}>;\n\nexport type ReactiveObject<Object extends Record<string, any>>\n    = ConvertValue<Object> & ReactiveSubscribe<PickObverser<Object>>;\n\nexport function reactive<Object extends Record<string, any>>(\n    setup: Readonly<Object> | (() => Readonly<Object>),\n): ReactiveObject<Object> {\n    const result = isFunction(setup) ? setup() : setup;\n    const reactiveObject: Record<string, any> = {};\n\n    keys(result).forEach((name: any) => {\n        const value = result[name];\n        if (isObserver(value)) {\n            setObserver(reactiveObject, name, value);\n            Reactive(name)(reactiveObject, name);\n        } else {\n            reactiveObject[name] = value;\n        }\n    });\n\n    injectReactiveSubscribe(reactiveObject);\n    return reactiveObject as ReactiveObject<Object>;\n}\n","import { keys } from \"src/core\";\nimport { Ref } from \"src/core/types\";\nimport { ReactiveAdapter } from \"./ReactiveAdapter\";\nimport { ReactiveSubscribe } from \"./ReactiveSubscribe\";\nimport { ReactiveEventCallback } from \"./types\";\nimport { getObservers, withReactiveMethods } from \"./utils\";\n\nexport function adaptReactive<\n    Instance extends ReactiveSubscribe<Record<string, any>>,\n    State extends Record<string, any> = {},\n    Methods extends keyof Partial<Instance> = any,\n    Data = any,\n    Events extends Record<string, any> = {},\n    >(adapter: ReactiveAdapter<Instance, State, Methods, Data, Events>) {\n\n    function data(): Data {\n        return adapter.data?.() ?? {} as Data;\n    }\n\n    const instanceRef: Ref<Instance> = { current: adapter.created?.(data()) || null };\n    let firstState: State | null = null;\n    \n    return {\n        state(): State {\n            const inst = instanceRef.current;\n\n            if (firstState) {\n                return firstState;\n            }\n            if (adapter.state) {\n                firstState = adapter.state;\n            } else if (inst) {\n                const observers = getObservers(inst);\n\n                firstState = keys(observers).reduce((prev, cur) => {\n                    prev[cur] = observers[cur].current;\n                    return prev;\n                }, {} as any);\n            }\n            return firstState || {} as State;\n        },\n        instance() {\n            return instanceRef.current;\n        },\n        mounted(): void {\n            instanceRef.current = adapter.mounted?.(data()) || instanceRef.current;\n        },\n        init(): void {\n            adapter.init?.(instanceRef.current!, data());\n        },\n        destroy(): void {\n            adapter.destroy?.(instanceRef.current!, data());\n        },\n        methods() {\n            return withReactiveMethods<any, any, any>(instanceRef, adapter.methods);\n        },\n        on(eventName: string, listener: ReactiveEventCallback<any, any>) {\n            adapter.on?.(instanceRef.current!, eventName as never, listener);\n        },\n        off(eventName: string, listener: ReactiveEventCallback<any, any>) {\n            adapter.off?.(instanceRef.current!, eventName as never, listener);\n        },\n    };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}